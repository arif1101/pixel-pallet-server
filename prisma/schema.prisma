  // This is your Prisma schema file,
  // learn more about it in the docs: https://pris.ly/d/prisma-schema

  // Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
  // Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

  generator client {
    provider = "prisma-client-js"
  }

  datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
  }


model User {
  id        Int       @id @default(autoincrement())
  name      String?
  email     String    @unique
  password  String
  role      Role      @default(USER)
  phone     String?
  picture   String?
  blogs     Blog[]
  projects  Project[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}


model Blog {
  id        Int       @id @default(autoincrement())
  slug      String    @unique
  title     String
  content   String    @db.Text
  tags      String[]
  image     String?   // optional: URL or file path for blog cover image
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}


model Project {
  id             Int      @id @default(autoincrement())
  title          String
  slug           String   @unique
  description    String   @db.Text
  techStack      String[]
  category       String
  featured       Boolean  @default(false)
  image          String?
  liveUrl        String?
  clientRepoUrl  String?
  serverRepoUrl  String?
  author         User     @relation(fields: [authorId], references: [id])
  authorId       Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

enum Role {
  ADMIN
  USER
}



  // model User {
  //   id Int @id @default(autoincrement())
  //   name String?
  //   email String @unique
  //   password String?
  //   role Role @default(ADMIN)
  //   phone String?
  //   picture String?
  //   createdAt DateTime @default(now())
  //   updatedAt DateTime @updatedAt
  // }

  // model Blog {
  //   id Int @id @default(autoincrement())
  //   slug String @unique
  //   title String
  //   content String @db.Text
  //   tags String[]
  //   createdAt DateTime @default(now())
  //   updatedAt DateTime @updatedAt
  // }

  // model Project {
  //   id Int @id @default(autoincrement())
  //   title String
  //   slug String @unique
  //   description String @db.Text
  //   techStack String[]
  //   category String
  //   featured Boolean @default(false)
  //   image String?
  //   liveUrl String?
  //   clientRepoUrl String?
  //   serverRepoUrl String?
  //   createdAt   DateTime @default(now())
  //   updatedAt   DateTime @updatedAt
  // }

  // enum Role {
  //   ADMIN
  // }
